
#### set library to local and load packages - ONS quirk 
local <- "D:/R_LIB"
default <- .libPaths()
new <- c(local,default)
.libPaths(new)

library(dplyr)
library(ggplot2)
library(waffle)
library(svglite)

############################## DO NOT EDIT! ################################################################################
#################### function to create waffle charts - run it once every time you open this script ########################  
waffle_fun <- function(x,data,group_col,start_col,end_col){
  # Set change column names to var_names
  names(data)[start_col:end_col] <- var_names
    # Columns with data
    cols <- seq(start_col,end_col)
      # Take one row of data
      sub_data<-data[x,]
      sub_data[is.na(sub_data)] <- 0
        # Calculate percentage and round down
        percent_floor <- floor(100*(sub_data[,cols]/rowSums(sub_data[,cols])))
          # Calculate the remainder - difference between percent and perecent_floor
          remainders <- 100*(sub_data[,cols]/rowSums(sub_data[,cols]))-(percent_floor)
            # Reorder percent_floor by decreasing size of remainder
            percent_floor2 <- percent_floor[,order(remainders,decreasing=TRUE)]
# loop over values and 1 in order until sum is 100
  i <-1
  for (i in 1:length(percent_floor2)){
    percent_floor2[,i] <- percent_floor2[,i]+1
    
    if(sum(percent_floor2)==100){
      break;
    }
  }
  #reorder columns to original order
  percent_floor2 <- percent_floor2[,names(percent_floor)]
  print("===========Processing===========")
  print(percent_floor2)
  
  #create waffle plot - TODO - allow user to set parameters in function call
  waffle_plot <- waffle(percent_floor2,rows=10,size=1,flip=TRUE,colors=var_colours,title=sub_data[,group_col])
  # export as svg
  ggsave(waffle_plot,file=paste0("data/out/",sub_data[,group_col],"_waffle.svg"),dpi=72,width=4,height=4, units="in")
  print("==============Done==============")
  
  return(waffle_plot)
}
############################## DO NOT EDIT! #################################################################################

#### Input your parameters and run everything below this line
# Set working directory
setwd("D:/1_projects/cartograms")
# Load data
input<-read.csv("data/data_houses.csv",sep=",")
#data[is.na(data)]<-0
# Input names of your categories in the current column order from left to right
var_names <- c("Detached", "Semi-detached", "Terrace", "Flat")
# Hex values of colours - same order as names 
var_colours <- c("#652B8E", "#0DB3C1", "#F16923", "#FDCC0C")
# Print column names and their index
as.data.frame(names(input))
# Creates a list of rows to be iterated
waffle_size <- as.list(seq(1:nrow(input)))
#### Executes the waffle function ####
waffle_out <- lapply(waffle_size, waffle_fun, data = input, group_col = 3, start_col = 4, end_col = 7)

test<-waffle_out[[5]]
plot(test) + theme(panel.border = element_rect(fill=NA,colour="blue",size=2),plot.margin = margin(2,2,2,2,"cm"))

plot(test) + theme(plot.title = element_text(debug=TRUE,margin=margin(c(2,2,2,2),unit="cm")))
