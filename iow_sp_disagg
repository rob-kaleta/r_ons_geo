####  This script merges KS and QS census data at OA level, and subsets only Isle of Wight data  ####

#### set library to local
local<-"D:/R_LIB"
default<-.libPaths()
new<-c(local,default)
.libPaths(new)

library(rgdal)
library(sf)
library(dplyr)
library(cartography)
library(raster)
library(data.table)
library(tidyr)
library(stringr)
# Set work directory
setwd("D:/1_projects/SP_DAGG/data")
########## Separate IOW OA to use as a case study / test area #### 
######## CREATE / LOAD lookups #########
#### load OA through to LAD lookup
OA_to_LA_lu<-fread("lookups/OA_to_LA_lu.csv")
# extract only IOW fields
iow_lu<-filter(OA_to_LA_lu,LAD11NM == "Isle of Wight")
##### create a lookup of census questions to rename columns later 
desc_l<-unique(list.files(recursive = TRUE,pattern="*DESC0.CSV"))
desc<-lapply(desc_l,fread)
census_codes_lu<-rbindlist(desc)
census_codes_lu<-mutate(census_codes_lu,meas_stat_desc=paste(ColumnVariableCode,ColumnVariableMeasurementUnit,ColumnVariableStatisticalUnit,ColumnVariableDescription,sep="-"))
census_codes_lu$meas_stat_desc<-gsub(" ","_",census_codes_lu$meas_stat_desc)
census_codes_lu$meas_stat_desc<-gsub(":_",":",census_codes_lu$meas_stat_desc)
rm(desc,desc_l)
#fwrite(census_codes_lu,"lookups/census_codes_lu.csv")
census_codes_lu<-fread("lookups/census_codes_lu.csv")
#### Optional create a lookup of broad census categories from folder names downloaded from NOMIS - fread it if needed ####
#nd_files<-list.files("census/ND")
#code_desc_LU<-str_replace(nd_files,"EW","EW_")%>%str_replace("WA","WA_")%>%str_replace("-","")%>%str_trim()
#code_desc_LU<-as.data.frame(code_desc_LU)%>%separate(code_desc_LU,sep="_",into=c("Code","Description"))
#fwrite(code_desc_LU,"lookups/code_desc_LU.csv")
#code_desc_LU<-fread("lookups/code_desc_LU.csv")

####  Read in OA from fgdb #### 
FGDB_UK<- "D:/1_projects/ONS_data.gdb"
FGDB_UK<- "W:/ONS_Geography_Data_Repository/ONS_Geography_Data_Repository.gdb"

# List all feature classes in a file geodatabase
FGDB_List <- ogrListLayers(FGDB_UK)
print(FGDB_List) 
# Upload OAs and only keep IOW ones  
iow_oa<-st_read(FGDB_UK,layer="OA_2011_EW_BGC_V2")%>%
        filter(OA11CD %in% c(iow_lu$OA11CD))

####  dissolve iow OAs to get a boundary for IOW - optional #### 
iow_bounds<-iow_oa %>% 
            group_by(LAD11CD) %>% 
            summarise() %>% 
            st_cast()
iow_bounds_5k_buffer<-st_buffer(iow_bounds,5000)

#### mass import census CSVs from nested folders and merge into one table ####
start<-Sys.time()
census_l<-unique(list.files("census/NDUnzip",recursive = TRUE,pattern="*DATA.CSV",full.names = TRUE))
census<-lapply(census_l,fread)
census<-Reduce(merge,census)
end<-Sys.time()-start
print(end)
# rename columns from codes to descriptive values
names(census)<-as.character(census_codes_lu$meas_stat_desc[base::match(names(census),census_codes_lu$ColumnVariableCode)])
# subset IOW census data only
iow_oa_census<-filter(census,GeographyCode %in% iow_oa$OA11CD)

####  join census information to iow OA geography #### 
iow_oa_with_census<-inner_join(iow_oa,iow_oa_census,by=c("OA11CD"="GeographyCode"))

#### plots - quick and dirty #### 
plot_vars<-function(variable){
  var_plot<-names(iow_oa_with_census)[variable]
  choroLayer(iow_oa_with_census,
             var = var_plot, 
             method = "quantile", 
             legend.title.txt = "")
  layoutLayer(
    title = var_plot
  )
}
# plot variable - numerical only
plot_vars()


####  rasterizing census data ####
# create empty raster equal to IOW bounds 5k buffer, resolution of 100m
r<-raster(iow_bounds_5k_buffer,res=100)
# list of columns / variables to be rasterised
rast_l<-as.list(colnames(iow_oa_with_census)[5:2107])
# rasterise and stack
Sys.time()
start<-Sys.time()
iow_stack<- do.call(stack,
            lapply(rast_l,function(val){
            fasterize(iow_oa_with_census,raster=r,field=val)
        }
    )
)
end<-Sys.time()-start
print(end)
# assign names to raster layers
names(iow_stack)<-rast_l
# quick plot of raster 
plot(iow_stack[[2]],main=names(iow_stack)[2],cex.main=0.8,cex.axis=0.7,cex.lab=0.7)

roads<-st_read(FGDB_UK,layer="ITN_WHOLE_UKRdNd_1")%>%slice(1:2)
